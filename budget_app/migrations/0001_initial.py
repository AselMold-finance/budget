# Generated by Django 3.2.15 on 2022-08-18 04:58

import budget_app.service
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(db_index=True, help_text='Например 10001.00001 или 10001', max_length=11, unique=True, verbose_name='Номер счёта')),
                ('is_strucure_planed', models.BooleanField(default=False, verbose_name='Планирование происходит структурным подразделением')),
                ('account_name', models.CharField(max_length=100, verbose_name='Название счёта')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
            ],
            options={
                'verbose_name': 'Балансовый счёт',
                'verbose_name_plural': 'Балансовые счёта',
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_number', models.IntegerField(unique=True, verbose_name='Код филиала')),
                ('branch_name', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Название филиала')),
                ('branch_head_name', models.CharField(blank=True, max_length=50, unique=True, verbose_name='ФИО начальника филиала')),
                ('branch_phone_number', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Номер мобильного телефона филиала')),
                ('branch_landline_phone_number', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Номер стационарного телефона филиала')),
                ('is_structual', models.BooleanField(choices=[('yes', 'Да'), ('no', 'Нет')], default='yes', verbose_name='Это структурное подразделение, а не филиал!')),
                ('branch_address', models.CharField(blank=True, max_length=50, verbose_name='Адрес филиала')),
                ('branch_email', models.EmailField(blank=True, max_length=50, verbose_name='Эл. почта филиала')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True, verbose_name='Работает')),
                ('employee_amount', models.PositiveIntegerField(blank=True, default=0, verbose_name='Кол-во сотрудников')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='branchs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Филиал',
                'verbose_name_plural': 'Филиалы',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Название категории')),
                ('is_active', models.BooleanField(default=True, verbose_name='Данная категория активна')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('is_strucure_planed', models.BooleanField(default=False, verbose_name='Планирование происходит структурным подразделением')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='budget_app.category', verbose_name='Подкатегория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='SchedulePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(default=budget_app.service.get_current_year, help_text='Используйте указанный формат: <YYYY>', unique=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2022)], verbose_name='Год бюджетирования')),
                ('edit_start_date', models.DateTimeField(verbose_name='Дата начала редактирования бюджета')),
                ('edit_end_date', models.DateTimeField(verbose_name='Дата конца редактирования бюджета')),
                ('accept_start_date', models.DateTimeField(verbose_name='Дата начала акцептирования бюджета')),
                ('accept_end_date', models.DateTimeField(verbose_name='Дата конца акцептирования бюджета')),
                ('is_edit', models.BooleanField(default=True, verbose_name='Редактирование')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'График бюджетирования',
                'verbose_name_plural': 'Графики бюджетирования',
            },
        ),
        migrations.CreateModel(
            name='StructuralDivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('structural_division_name', models.CharField(max_length=50, unique=True, verbose_name='Название структурного подразделения')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='budget_app.branch', verbose_name='Структурное подразделение')),
            ],
            options={
                'verbose_name': 'Структурное подразделение',
                'verbose_name_plural': 'Структурные подразделения',
            },
        ),
        migrations.CreateModel(
            name='PreviusYearFact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Факт за предыдущий год')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='account_fact', to='budget_app.account')),
                ('planed_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='budget_app.scheduleplan')),
            ],
            options={
                'verbose_name': 'Факт предыдущего года',
                'verbose_name_plural': 'Факты предыдущего года',
            },
        ),
        migrations.CreateModel(
            name='PerformanceIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('1', 'Кредитный портфель'), ('2', 'Основные средства'), ('3', 'Депозиты'), ('4', 'Срочные депозиты'), ('5', 'Процентные расходы'), ('6', 'Процентные расходы по срочным депозитам'), ('7', 'Процентные доходы по кредитам'), ('8', 'РППУ'), ('9', 'Процентные доходы по ЦБ'), ('10', 'Процентные доходы'), ('11', 'Ценные бумаги'), ('12', 'Административные расходы')], max_length=2, unique=True, verbose_name='Показатель эффективности')),
                ('account_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='budget_app.category', verbose_name='Показатель для расчёта')),
            ],
            options={
                'verbose_name': 'Показатель эффективности',
                'verbose_name_plural': 'Показатели эффективности',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('rub', 'Рубль'), ('dollar', 'Доллар'), ('euro', 'Евро'), ('som', 'Сом'), ('yang', ' Юань'), ('tenge', 'Тенге'), ('lira', 'Лира'), ('won', 'Корейский Вон')], default='som', max_length=20, unique=True, verbose_name='Наименование Валюты')),
                ('currency', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Курс валюты')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('currency_planed_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='budget_app.scheduleplan')),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='account_category', to='budget_app.category', verbose_name='Группа счёта'),
        ),
        migrations.AddField(
            model_name='account',
            name='structure_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='budget_app.structuraldivision', verbose_name='Название структурного подразделения'),
        ),
        migrations.CreateModel(
            name='PlannedAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default='-', verbose_name='Описание или расшифровка')),
                ('january', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма плана январь')),
                ('february', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма плана февраль')),
                ('march', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма плана март')),
                ('april', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма плана апрель')),
                ('may', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма плана май')),
                ('june', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма плана июнь')),
                ('july', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма плана июль')),
                ('august', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма плана август')),
                ('september', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма плана сентябрь')),
                ('october', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма плана октябрь')),
                ('november', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма плана ноябрь')),
                ('december', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма плана декабрь')),
                ('is_add', models.BooleanField(default=False, verbose_name='Добавлен')),
                ('is_acceptance_by_structure', models.BooleanField(default=False, verbose_name='Акцептован структурным подразделением')),
                ('is_acceptance_by_main', models.BooleanField(default=False, verbose_name='Акцептован отделом планирования')),
                ('create_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='budget_app.account', verbose_name='Назначение')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='budget_app.branch', verbose_name='Филиал')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='budget_app.currency', verbose_name='Валюта бюджетирования')),
                ('planed_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='budget_app.scheduleplan')),
            ],
            options={
                'verbose_name': 'Плановая сумма',
                'verbose_name_plural': 'Плановые суммы',
                'unique_together': {('account', 'planed_year')},
            },
        ),
    ]
